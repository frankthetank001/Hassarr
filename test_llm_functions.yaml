# File: test_llm_functions.yaml
# Testing the new Hassarr LLM API integration

# After setting up the integration, your LLM will have access to the "Hassarr Media Management" API with these tools:

# 1. hassarr_add_media - Add movies/TV shows
# Example: "Add The Dark Knight to my library"
# LLM will call: hassarr_add_media(title="The Dark Knight")

# 2. hassarr_check_status - Check media status  
# Example: "What's the status of Inception?"
# LLM will call: hassarr_check_status(title="Inception")

# 3. hassarr_search_media - Search for media
# Example: "Search for Christopher Nolan movies"
# LLM will call: hassarr_search_media(query="Christopher Nolan movies")

# 4. hassarr_get_active_downloads - Get current downloads
# Example: "What's downloading right now?"
# LLM will call: hassarr_get_active_downloads()

# To verify the API is available:
# 1. Go to Settings > Devices & Services > Hassarr
# 2. Check that the integration is loaded without errors
# 3. Check Home Assistant logs for "Successfully registered Hassarr LLM API"
# 4. Your conversation agents should now see the "Hassarr Media Management" API available

# Testing via Developer Tools > Services:
# You can test the underlying services that power these tools:
# - hassarr.add_media
# - hassarr.check_media_status  
# - hassarr.search_media
# - hassarr.get_active_requests

# How it works:
# - The tools are exposed to LLMs via Home Assistant's native LLM API
# - When your LLM calls a tool, it triggers the corresponding Hassarr service
# - The service returns structured JSON optimized for LLM interpretation
# - Your LLM can then provide natural language responses based on the data

# Note: This replaces the script-based approach and provides direct tool access to LLMs 