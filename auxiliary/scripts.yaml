# File: scripts.yaml  
# Note: Keep this filename comment for navigation and organization
# This file exposes Hassarr services as script entities for chat assistant integration

# Hassarr Chat Assistant Scripts
# These scripts wrap the Hassarr services to make them available as entities
# that the chat assistant can execute. Each script calls the corresponding
# service and returns structured JSON responses for LLM interpretation.

hassarr_check_media_status:
  alias: "Check Media Status in Overseerr"
  description: "Check the status of a movie or TV show in Overseerr with detailed information including download progress, who requested it, and content overview."
  icon: mdi:television-guide
  mode: single
  fields:
    title:
      name: "Media Title"
      description: "Movie or TV show title to search for (JUST the title, no season info)"
      required: true
      selector:
        text:
      example: "The Dark Knight"
  sequence:
    - service: hassarr.check_media_status
      data:
        title: "{{ title }}"
      response_variable: status_result
    - stop: ""
      response_variable: status_result

hassarr_search_media:
  alias: "Search for Media in Overseerr"
  description: "Search for movies or TV shows and get multiple results with ratings, overviews, and library status."
  icon: mdi:magnify
  mode: single
  fields:
    query:
      name: "Search Query"
      description: "Search term to look for movies or TV shows (can include any search criteria)"
      required: true
      selector:
        text:
      example: "action movies 2023"
  sequence:
    - service: hassarr.search_media
      data:
        query: "{{ query }}"
      response_variable: search_result
    - stop: ""
      response_variable: search_result

hassarr_add_media:
  alias: "Add Media to Overseerr"
  description: "Add a movie or TV show to Overseerr for download. For movies, you can specify 4K quality (is4k: true) if the user asks for '4K' or 'UHD', otherwise default to false. For TV shows, you can specify a season number or 'all seasons' to request the entire series. If no season is specified, you can assume season 1 by default."
  icon: mdi:plus-circle-multiple
  mode: single
  fields:
    title:
      name: "Media Title"
      description: "The movie or TV show name (e.g. 'Breaking Bad', 'The Matrix'). For 'add season 2 of Breaking Bad', use title='Breaking Bad' and season='2'. For 'add The Matrix in 4K', use title='The Matrix' and is4k=true."
      required: true
      selector:
        text:
      example: "Breaking Bad"
    season:
      name: "Season (TV Shows Only)"
      description: "For TV shows: season number (1, 2, 3), word numbers ('season two'), ranges ('seasons 1 to 5'), multiple seasons ('1, 2, 3'), or 'all seasons' for entire series. Leave empty for movies or to default to season 1."
      required: false
      selector:
        text:
      example: "2"
    is4k:
      name: "4K Quality (Movies Only)"
      description: "Request movie in 4K quality (only applicable for movies, not TV shows). Set to true if the user specifically mentions '4K', 'UHD', or 'high quality'."
      required: false
      selector:
        boolean:
      default: false
  sequence:
    - service: hassarr.add_media
      data:
        title: "{{ title }}"
        season: "{{ season | default(none) }}"
        is4k: "{{ is4k | default(false) }}"
      response_variable: add_result
    - stop: ""
      response_variable: add_result

hassarr_remove_media:
  alias: "Remove Media from Overseerr"
  description: "Remove a movie or TV show from Overseerr by title or media ID. If using title, it will search automatically."
  icon: mdi:delete
  mode: single
  fields:
    title:
      name: "Media Title (Optional)"
      description: "Movie or TV show title to search for and remove (JUST the title, no season info)"
      required: false
      selector:
        text:
      example: "The Matrix"
    media_id:
      name: "Media ID (Optional)"
      description: "Direct Overseerr media ID to remove (found in status checks)"
      required: false
      selector:
        text:
      example: "12345"
  sequence:
    - service: hassarr.remove_media
      data:
        title: "{{ title | default('') }}"
        media_id: "{{ media_id | default('') }}"
      response_variable: remove_result
    - stop: ""
      response_variable: remove_result

hassarr_get_requests:
  alias: "Get Requests from Overseerr"
  description: "Get information about requests from Overseerr with optional filtering by status (all, pending, processing, available, etc.)"
  icon: mdi:download-multiple
  mode: single
  fields:
    filter:
      name: "Filter (Optional)"
      description: "Filter requests by status: all, pending, processing, available, partial, allavailable, deleted. Leave empty for all requests."
      required: false
      selector:
        select:
          options:
            - "all"
            - "pending"
            - "processing"
            - "available"
            - "partial"
            - "allavailable"
            - "deleted"
      default: "all"
  sequence:
    - service: hassarr.get_requests
      data:
        filter: "{{ filter | default('all') }}"
      response_variable: requests_result
    - stop: ""
      response_variable: requests_result

hassarr_get_media:
  alias: "Get Media from Overseerr Library"
  description: "Get comprehensive media information from Overseerr library with filtering and pagination support. Shows all media in the system, not just requested items."
  icon: mdi:movie-open
  mode: single
  fields:
    filter:
      name: "Filter (Optional)"
      description: "Filter media by status: all, pending, processing, available, partial, allavailable, deleted. Leave empty for all media."
      required: false
      selector:
        select:
          options:
            - "all"
            - "pending"
            - "processing"
            - "available"
            - "partial"
            - "allavailable"
            - "deleted"
      default: "all"
    take:
      name: "Results to Return (Optional)"
      description: "Number of results to return (page size). Default is 50, max is 200."
      required: false
      selector:
        number:
          min: 1
          max: 200
      default: 50
    skip:
      name: "Results to Skip (Optional)"
      description: "Number of results to skip for pagination. Use 0 for first page, 50 for second page (if take=50), etc."
      required: false
      selector:
        number:
          min: 0
      default: 0
  sequence:
    - service: hassarr.get_media
      data:
        filter: "{{ filter | default('all') }}"
        take: "{{ take | default(50) }}"
        skip: "{{ skip | default(0) }}"
      response_variable: media_result
    - stop: ""
      response_variable: media_result

hassarr_run_job:
  alias: "Run Overseerr Job"
  description: "Trigger a specific Overseerr job by its ID. Use the Jobs Status sensor to see available job IDs."
  icon: mdi:play-circle
  mode: single
  fields:
    job_id:
      name: "Job ID"
      description: "The ID of the Overseerr job to run (check Jobs Status sensor for available IDs)"
      required: true
      selector:
        text:
      example: "plex-sync"
  sequence:
    - service: hassarr.run_job
      data:
        job_id: "{{ job_id }}"
      response_variable: job_result
    - stop: ""
      response_variable: job_result

hassarr_test_connection:
  alias: "Test Overseerr Connection"
  description: "Test the connection to your Overseerr server and get basic system information."
  icon: mdi:connection
  mode: single
  sequence:
    - service: hassarr.test_connection
      response_variable: connection_result
    - stop: ""
      response_variable: connection_result

# Convenient aliases for common requests
# These are shortcut scripts for common LLM queries to make interaction more natural

hassarr_get_pending_requests:
  alias: "Get Pending Requests"
  description: "Get all pending requests waiting for approval"
  icon: mdi:clock-outline
  mode: single
  sequence:
    - service: hassarr.get_requests
      data:
        filter: "pending"
      response_variable: pending_result
    - stop: ""
      response_variable: pending_result

hassarr_get_downloading_media:
  alias: "Get Downloading Media"
  description: "Get all media currently being downloaded or processed"
  icon: mdi:download
  mode: single
  sequence:
    - service: hassarr.get_media
      data:
        filter: "processing"
      response_variable: downloading_result
    - stop: ""
      response_variable: downloading_result

hassarr_get_available_media:
  alias: "Get Available Media"
  description: "Get all media that is available in the library"
  icon: mdi:check-circle
  mode: single
  sequence:
    - service: hassarr.get_media
      data:
        filter: "available"
      response_variable: available_result
    - stop: ""
      response_variable: available_result
